{"ast":null,"code":"import _classCallCheck from \"/Users/drashti/Documents/Drashti workshop/todo-app-part-3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drashti/Documents/Drashti workshop/todo-app-part-3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drashti/Documents/Drashti workshop/todo-app-part-3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drashti/Documents/Drashti workshop/todo-app-part-3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drashti/Documents/Drashti workshop/todo-app-part-3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/drashti/Documents/Drashti workshop/todo-app-part-3/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport todosList from \"./todos.json\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport TodoList from \"./TodoList.js\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"./actions\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      todos: todosList,\n      value: \"\"\n    };\n\n    _this.handleDelete = function (todoIdToDelete) {\n      var newTodoList = _this.state.todos.filter(function (todo) {\n        return todo.id !== todoIdToDelete;\n      });\n\n      _this.setState({\n        todos: newTodoList\n      });\n    };\n\n    _this.handleCreate = function (event) {\n      if (event.key === \"Enter\") {\n        // const newTodoList = this.state.todos.slice();\n        // newTodoList.push({\n        //   userId: 1,\n        //   id: Math.floor(Math.random() * 10000000),\n        //   title: this.state.value,\n        //   completed: false\n        // });\n        // this.setState({ todos: newTodoList, value: \"\" });\n        // this.setState({});\n        _this.props.addTodo();\n      }\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n    };\n\n    _this.handleCompleted = function (todoIdToCompleted) {\n      var newTodoList = _this.state.todos.filter(function (todo) {\n        return todo.completed !== true;\n      });\n\n      _this.setState({\n        todos: newTodoList\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"section\", {\n        className: \"todoapp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"todos\"), React.createElement(\"input\", {\n        className: \"new-todo\",\n        placeholder: \"What needs to be done?\" // autofocus\n        ,\n        onKeyDown: this.handleCreate,\n        onChange: this.handleChange,\n        value: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(TodoList, {\n            handleToggle: _this2.handleToggle,\n            handleDelete: _this2.handleDelete,\n            todos: _this2.props.todos,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/active\",\n        render: function render() {\n          return React.createElement(TodoList, {\n            handleToggle: _this2.handleToggle,\n            handleDelete: _this2.handleDelete,\n            todos: _this2.props.todos.filter(function (todo) {\n              return todo.completed === false;\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/completed\",\n        render: function render() {\n          return React.createElement(TodoList, {\n            handleToggle: _this2.handleToggle,\n            handleDelete: _this2.handleDelete,\n            todos: _this2.props.todos.filter(function (todo) {\n              return todo.completed === true;\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"footer\", {\n        className: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"todo-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.todos.filter(function (todo) {\n        return todo.completed !== true;\n      }).length), \" \", \"item(s) left\"), React.createElement(\"ul\", {\n        className: \"filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/\",\n        activeClassName: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"All\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/active\",\n        activeClassName: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Active\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/completed\",\n        activeClassName: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Completed\"))), React.createElement(\"button\", {\n        className: \"clear-completed\",\n        onClick: function onClick(event) {\n          return _this2.handleCompleted(event, _this2.props.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Clear completed\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos\n  };\n};\n\nvar mapDisptachToProps = {\n  addTodo: addTodo\n};\nexport default connect(mapStateToProps, mapDisptachToProps)(App);","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/todo-app-part-3/src/App.js"],"names":["React","Component","todosList","Route","NavLink","TodoList","connect","addTodo","App","state","todos","value","handleDelete","todoIdToDelete","newTodoList","filter","todo","id","setState","handleCreate","event","key","props","handleChange","target","handleCompleted","todoIdToCompleted","completed","handleToggle","length","mapStateToProps","mapDisptachToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\nimport todosList from \"./todos.json\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport TodoList from \"./TodoList.js\";\nimport { connect } from \"react-redux\";\nimport {addTodo} from \"./actions\"\n\nclass App extends Component {\n  state = {\n    todos: todosList,\n    value: \"\"\n  };\n  handleDelete = todoIdToDelete => {\n    const newTodoList = this.state.todos.filter(\n      todo => todo.id !== todoIdToDelete\n    );\n    this.setState({ todos: newTodoList });\n  };\n\n  handleCreate = event => {\n    if (event.key === \"Enter\") {\n      // const newTodoList = this.state.todos.slice();\n      // newTodoList.push({\n      //   userId: 1,\n      //   id: Math.floor(Math.random() * 10000000),\n      //   title: this.state.value,\n      //   completed: false\n      // });\n      // this.setState({ todos: newTodoList, value: \"\" });\n      // this.setState({});\n      this.props.addTodo();\n    }\n  };\n\n  // handleToggle = todoIdToToggle => {\n  // this.props.toggleTodo(todoIdToToggle);\n  // const newTodoList = this.props.todos.map(todo => {\n  //   if (todo.id === todoIdToToggle) {\n  //     const newTodo = { ...todo };\n  //     newTodo.completed = !newTodo.completed;\n  //     return newTodo;\n  //   }\n  //   return todo;\n  // });\n  // this.setState({ todos: newTodoList });\n  // };\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n  handleCompleted = todoIdToCompleted => {\n    const newTodoList = this.state.todos.filter(\n      todo => todo.completed !== true\n    );\n    this.setState({ todos: newTodoList });\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            // autofocus\n            onKeyDown={this.handleCreate}\n            onChange={this.handleChange}\n            value={this.state.value}\n          />\n        </header>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <TodoList\n              handleToggle={this.handleToggle}\n              handleDelete={this.handleDelete}\n              todos={this.props.todos}\n            />\n          )}\n        />\n\n        <Route\n          exact\n          path=\"/active\"\n          render={() => (\n            <TodoList\n              handleToggle={this.handleToggle}\n              handleDelete={this.handleDelete}\n              todos={this.props.todos.filter(todo => todo.completed === false)}\n            />\n          )}\n        />\n\n        <Route\n          exact\n          path=\"/completed\"\n          render={() => (\n            <TodoList\n              handleToggle={this.handleToggle}\n              handleDelete={this.handleDelete}\n              todos={this.props.todos.filter(todo => todo.completed === true)}\n            />\n          )}\n        />\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            <strong>\n              {this.state.todos.filter(todo => todo.completed !== true).length}\n            </strong>{\" \"}\n            item(s) left\n          </span>\n          <ul className=\"filters\">\n            <li>\n              <NavLink exact to=\"/\" activeClassName=\"selected\">\n                All\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/active\" activeClassName=\"selected\">\n                Active\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/completed\" activeClassName=\"selected\">\n                Completed\n              </NavLink>\n            </li>\n          </ul>\n          <button\n            className=\"clear-completed\"\n            onClick={event => this.handleCompleted(event, this.props.id)}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos\n  };\n};\nconst mapDisptachToProps = {\n  addTodo\n};\n\nexport default connect(mapStateToProps,mapDisptachToProps)(App);\n"]},"metadata":{},"sourceType":"module"}